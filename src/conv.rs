// This is copied directly from
// https://github.com/linebender/druid/blob/master/druid-shell/src/backend/windows/keyboard.rs#L120=
// and may not work for other platforms.
pub fn scan_to_code(scan_code: u32) -> druid::Code {
    use druid::Code::*;

    match scan_code {
        0x1 => Escape,
        0x2 => Digit1,
        0x3 => Digit2,
        0x4 => Digit3,
        0x5 => Digit4,
        0x6 => Digit5,
        0x7 => Digit6,
        0x8 => Digit7,
        0x9 => Digit8,
        0xA => Digit9,
        0xB => Digit0,
        0xC => Minus,
        0xD => Equal,
        0xE => Backspace,
        0xF => Tab,
        0x10 => KeyQ,
        0x11 => KeyW,
        0x12 => KeyE,
        0x13 => KeyR,
        0x14 => KeyT,
        0x15 => KeyY,
        0x16 => KeyU,
        0x17 => KeyI,
        0x18 => KeyO,
        0x19 => KeyP,
        0x1A => BracketLeft,
        0x1B => BracketRight,
        0x1C => Enter,
        0x1D => ControlLeft,
        0x1E => KeyA,
        0x1F => KeyS,
        0x20 => KeyD,
        0x21 => KeyF,
        0x22 => KeyG,
        0x23 => KeyH,
        0x24 => KeyJ,
        0x25 => KeyK,
        0x26 => KeyL,
        0x27 => Semicolon,
        0x28 => Quote,
        0x29 => Backquote,
        0x2A => ShiftLeft,
        0x2B => Backslash,
        0x2C => KeyZ,
        0x2D => KeyX,
        0x2E => KeyC,
        0x2F => KeyV,
        0x30 => KeyB,
        0x31 => KeyN,
        0x32 => KeyM,
        0x33 => Comma,
        0x34 => Period,
        0x35 => Slash,
        0x36 => ShiftRight,
        0x37 => NumpadMultiply,
        0x38 => AltLeft,
        0x39 => Space,
        0x3A => CapsLock,
        0x3B => F1,
        0x3C => F2,
        0x3D => F3,
        0x3E => F4,
        0x3F => F5,
        0x40 => F6,
        0x41 => F7,
        0x42 => F8,
        0x43 => F9,
        0x44 => F10,
        0x45 => Pause,
        0x46 => ScrollLock,
        0x47 => Numpad7,
        0x48 => Numpad8,
        0x49 => Numpad9,
        0x4A => NumpadSubtract,
        0x4B => Numpad4,
        0x4C => Numpad5,
        0x4D => Numpad6,
        0x4E => NumpadAdd,
        0x4F => Numpad1,
        0x50 => Numpad2,
        0x51 => Numpad3,
        0x52 => Numpad0,
        0x53 => NumpadDecimal,
        0x54 => PrintScreen,
        0x56 => IntlBackslash,
        0x57 => F11,
        0x58 => F12,
        0x59 => NumpadEqual,
        0x64 => F13,
        0x65 => F14,
        0x66 => F15,
        0x67 => F16,
        0x68 => F17,
        0x69 => F18,
        0x6A => F19,
        0x6B => F20,
        0x6C => F21,
        0x6D => F22,
        0x6E => F23,
        0x70 => KanaMode,
        0x71 => Lang2,
        0x72 => Lang1,
        0x73 => IntlRo,
        0x76 => F24,
        0x77 => Lang4,
        0x78 => Lang3,
        0x79 => Convert,
        0x7B => NonConvert,
        0x7D => IntlYen,
        0x7E => NumpadComma,
        0x108 => Undo,
        0x10A => Paste,
        0x110 => MediaTrackPrevious,
        0x117 => Cut,
        0x118 => Copy,
        0x119 => MediaTrackNext,
        0x11C => NumpadEnter,
        0x11D => ControlRight,
        0x11E => LaunchMail,
        0x120 => AudioVolumeMute,
        0x121 => LaunchApp2,
        0x122 => MediaPlayPause,
        0x124 => MediaStop,
        0x12C => Eject,
        0x12E => AudioVolumeDown,
        0x130 => AudioVolumeUp,
        0x132 => BrowserHome,
        0x135 => NumpadDivide,
        0x137 => PrintScreen,
        0x138 => AltRight,
        0x13B => Help,
        0x145 => NumLock,
        0x146 => Pause,
        0x147 => Home,
        0x148 => ArrowUp,
        0x149 => PageUp,
        0x14B => ArrowLeft,
        0x14D => ArrowRight,
        0x14F => End,
        0x150 => ArrowDown,
        0x151 => PageDown,
        0x152 => Insert,
        0x153 => Delete,
        0x15B => MetaLeft,
        0x15C => MetaRight,
        0x15D => ContextMenu,
        0x15E => Power,
        0x15F => Sleep,
        0x163 => WakeUp,
        0x165 => BrowserSearch,
        0x166 => BrowserFavorites,
        0x167 => BrowserRefresh,
        0x168 => BrowserStop,
        0x169 => BrowserForward,
        0x16A => BrowserBack,
        0x16B => LaunchApp1,
        0x16C => LaunchMail,
        0x16D => MediaSelect,
        0x1F1 => Lang2,
        0x1F2 => Lang1,
        _ => Unidentified,
    }
}

pub fn druid_key_code(key_code: &bevy::prelude::KeyCode, shift: bool) -> druid::KbKey {
    use bevy::prelude::KeyCode::*;
    //use druid::KbKey::*;

    let char = |a: &str, b: &str| {
        druid::KbKey::Character(if !shift { a.to_string() } else { b.to_string() })
    };

    match key_code {
        Key1 => char("1", "!"),
        Key2 => char("2", "@"),
        Key3 => char("3", "#"),
        Key4 => char("4", "$"),
        Key5 => char("5", "%"),
        Key6 => char("6", "^"),
        Key7 => char("7", "&"),
        Key8 => char("8", "*"),
        Key9 => char("9", "("),
        Key0 => char("0", ")"),
        A => char("a", "A"),
        B => char("b", "B"),
        C => char("c", "C"),
        D => char("d", "D"),
        E => char("e", "E"),
        F => char("f", "F"),
        G => char("g", "G"),
        H => char("h", "H"),
        I => char("i", "I"),
        J => char("j", "J"),
        K => char("k", "K"),
        L => char("l", "L"),
        M => char("m", "M"),
        N => char("n", "N"),
        O => char("o", "O"),
        P => char("p", "P"),
        Q => char("q", "Q"),
        R => char("r", "R"),
        S => char("s", "S"),
        T => char("t", "T"),
        U => char("u", "U"),
        V => char("v", "V"),
        W => char("w", "W"),
        X => char("x", "X"),
        Y => char("y", "Y"),
        Z => char("z", "Z"),
        Escape => druid::KbKey::Escape,
        F1 => druid::KbKey::F1,
        F2 => druid::KbKey::F2,
        F3 => druid::KbKey::F3,
        F4 => druid::KbKey::F4,
        F5 => druid::KbKey::F5,
        F6 => druid::KbKey::F6,
        F7 => druid::KbKey::F7,
        F8 => druid::KbKey::F8,
        F9 => druid::KbKey::F9,
        F10 => druid::KbKey::F10,
        F11 => druid::KbKey::F11,
        F12 => druid::KbKey::F12,
        F13 => druid::KbKey::F13,
        F14 => druid::KbKey::F14,
        F15 => druid::KbKey::F15,
        F16 => druid::KbKey::F16,
        F17 => druid::KbKey::F17,
        F18 => druid::KbKey::F18,
        F19 => druid::KbKey::F19,
        F20 => druid::KbKey::F20,
        F21 => druid::KbKey::F21,
        F22 => druid::KbKey::F22,
        F23 => druid::KbKey::F23,
        F24 => druid::KbKey::F24,
        //Snapshot => druid::KbKey::Snapshot,
        Scroll => druid::KbKey::ScrollLock,
        Pause => druid::KbKey::Pause,
        Insert => druid::KbKey::Insert,
        Home => druid::KbKey::Home,
        Delete => druid::KbKey::Delete,
        End => druid::KbKey::End,
        PageDown => druid::KbKey::PageDown,
        PageUp => druid::KbKey::PageUp,
        Left => druid::KbKey::ArrowLeft,
        Up => druid::KbKey::ArrowUp,
        Right => druid::KbKey::ArrowRight,
        Down => druid::KbKey::ArrowDown,
        Back => druid::KbKey::Backspace, //?
        Return => druid::KbKey::Enter,
        Space => druid::KbKey::Character(" ".into()),
        //Compose => druid::KbKey::Compose,
        //Caret => druid::KbKey::Caret,
        Numlock => druid::KbKey::NumLock,
        Numpad0 => char("0", ")"),
        Numpad1 => char("1", "!"),
        Numpad2 => char("2", "@"),
        Numpad3 => char("3", "#"),
        Numpad4 => char("4", "$"),
        Numpad5 => char("5", "%"),
        Numpad6 => char("6", "^"),
        Numpad7 => char("7", "&"),
        Numpad8 => char("8", "*"),
        Numpad9 => char("9", "("),
        //AbntC1 => druid::KbKey::AbntC1,
        //AbntC2 => druid::KbKey::AbntC2,
        NumpadAdd => druid::KbKey::Character("+".into()),
        Apostrophe => druid::KbKey::Character("'".into()),
        //Apps => druid::KbKey::Apps,
        //Asterisk => druid::KbKey::Asterisk,
        //Plus => druid::KbKey::Plus,
        //At => druid::KbKey::At,
        //Ax => druid::KbKey::Ax,
        Backslash => druid::KbKey::Character("\\".into()),
        //Calculator => druid::KbKey::Calculator,
        //Capital => druid::KbKey::Capital,
        //Colon => druid::KbKey::Colon,
        Comma => druid::KbKey::Character(",".into()),
        Convert => druid::KbKey::Convert,
        NumpadDecimal => druid::KbKey::Character(".".into()),
        NumpadDivide => druid::KbKey::Character("/".into()),
        // Equals => druid::KbKey::Equals,
        // Grave => druid::KbKey::Grave,
        // Kana => druid::KbKey::Kana,
        // Kanji => druid::KbKey::Kanji,
        LAlt => druid::KbKey::Alt,
        LBracket => druid::KbKey::Character("[".into()),
        LControl => druid::KbKey::Control,
        LShift => druid::KbKey::Shift,
        LWin => druid::KbKey::Meta,
        //Mail => druid::KbKey::Mail,
        MediaSelect => druid::KbKey::LaunchMediaPlayer,
        MediaStop => druid::KbKey::MediaStop,
        Minus => druid::KbKey::Character("-".into()),
        NumpadMultiply => druid::KbKey::Character("*".into()),
        Mute => druid::KbKey::AudioVolumeMute,
        //MyComputer => druid::KbKey::MyComputer,
        NavigateForward => druid::KbKey::BrowserForward,
        NavigateBackward => druid::KbKey::BrowserBack,
        NextTrack => druid::KbKey::MediaTrackNext,
        //NoConvert => druid::KbKey::NoConvert,
        NumpadComma => druid::KbKey::Character(",".into()),
        NumpadEnter => druid::KbKey::Enter,
        NumpadEquals => druid::KbKey::Character("=".into()),
        //Oem102 => druid::KbKey::Oem102,
        Period => druid::KbKey::Character(".".into()),
        PlayPause => druid::KbKey::MediaPlayPause,
        Power => druid::KbKey::Power,
        PrevTrack => druid::KbKey::MediaTrackPrevious,
        RAlt => druid::KbKey::Alt,
        RBracket => druid::KbKey::Character("]".into()),
        RControl => druid::KbKey::Control,
        RShift => druid::KbKey::Shift,
        RWin => druid::KbKey::Meta,
        Semicolon => druid::KbKey::Character(";".into()),
        Slash => druid::KbKey::Character("/".into()),
        //Sleep => druid::KbKey::Sleep,
        Stop => druid::KbKey::MediaStop,
        NumpadSubtract => druid::KbKey::Character("-".into()),
        //Sysrq => druid::KbKey::Sysrq,
        Tab => druid::KbKey::Tab,
        //Underline => druid::KbKey::Underline,
        //Unlabeled => druid::KbKey::Unlabeled,
        VolumeDown => druid::KbKey::AudioVolumeDown,
        VolumeUp => druid::KbKey::AudioVolumeUp,
        // Wake => druid::KbKey::Wake,
        // WebBack => druid::KbKey::WebBack,
        // WebFavorites => druid::KbKey::WebFavorites,
        // WebForward => druid::KbKey::WebForward,
        // WebHome => druid::KbKey::WebHome,
        // WebRefresh => druid::KbKey::WebRefresh,
        // WebSearch => druid::KbKey::WebSearch,
        // WebStop => druid::KbKey::WebStop,
        // Yen => druid::KbKey::Yen,
        Copy => druid::KbKey::Copy,
        Paste => druid::KbKey::Paste,
        Cut => druid::KbKey::Cut,
        _ => druid::KbKey::Unidentified,
    }
}
